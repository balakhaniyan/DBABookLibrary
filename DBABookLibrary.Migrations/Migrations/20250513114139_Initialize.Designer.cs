// <auto-generated />
using System;
using System.Collections.Generic;
using DBABookLibrary.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DBABookLibrary.Migrations.Migrations
{
    [DbContext(typeof(BookReadContext))]
    [Migration("20250513114139_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DBABookLibrary.Model.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AuthorId"));

                    b.Property<Guid>("AuthorGuid")
                        .HasColumnType("uuid");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "DBABookLibrary.Model.Author.Name#AuthorName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(248)
                                .HasColumnType("character varying(248)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(248)
                                .HasColumnType("character varying(248)");

                            b1.Property<string>("NickName")
                                .HasMaxLength(248)
                                .HasColumnType("character varying(248)");
                        });

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("DBABookLibrary.Model.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<Guid>("BookGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Genre")
                        .HasColumnType("integer");

                    b.Property<int>("LifeCycle")
                        .HasColumnType("integer");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.ComplexProperty<Dictionary<string, object>>("PublishedBookYear", "DBABookLibrary.Model.Book.PublishedBookYear#BookYear", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("BookYearId")
                                .HasColumnType("integer");

                            b1.Property<int>("Year")
                                .HasColumnType("integer");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Title", "DBABookLibrary.Model.Book.Title#BookTitle", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("BookTitleId")
                                .HasColumnType("integer");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(248)
                                .HasColumnType("character varying(248)");
                        });

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("DBABookLibrary.Model.Book", b =>
                {
                    b.HasOne("DBABookLibrary.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DBABookLibrary.Model.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
